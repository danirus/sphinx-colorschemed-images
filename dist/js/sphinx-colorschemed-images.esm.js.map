{"version":3,"file":"sphinx-colorschemed-images.esm.js","sources":["../../js/src/main.js"],"sourcesContent":["export class SphinxColorschemeImageHandler {\n  constructor(options={}) {\n    this._schemes = [];\n    this._mediaqs = [];\n\n    // If options are not given or if it is given with a key 'auto'\n    // and a boolean value true, then the instance created will add\n    // an event listener for changes on prefers-color-scheme to\n    // update images accordingly.\n    this._auto = options.hasOwnProperty('auto')\n      ? options['auto'] === true\n      : true;\n\n    const meta_prop = document.querySelector('meta[name=\"color-scheme\"]');\n    let meta_schemes = (meta_prop == undefined) ? \"\" : meta_prop.content;\n\n    if (meta_schemes.length > 0) {\n      const schemes = meta_schemes.split(\" \");\n      for (const item of schemes) {\n        this._schemes.push(item.trim());\n      }\n    } else {\n      this._schemes = ['light', 'dark'];\n    }\n\n    for (const scheme of this._schemes) {\n      const q = globalThis.matchMedia(`(prefers-color-scheme: ${scheme})`);\n      if (q.matches) {\n        this.activate(scheme);\n      }\n      if (this._auto === true) {\n        q.addEventListener('change', e => {\n          if (e.matches) {\n            console.log('event:', e);\n            this.activate(scheme);\n          }\n        });\n        this._mediaqs.push(q);\n      }\n    }\n  }\n\n  activate = (scheme) => {\n    const data_att = `data-alt-src-color-scheme-${scheme}`;\n    const images = document.querySelectorAll(`img[${data_att}]`);\n    for (const img of images) {\n      const new_img = new Image();\n      const new_src = img.getAttribute(data_att);\n      new_img.src = new_src;\n      new_img.addEventListener('load', () => {\n        img.src = new_img.src;\n      });\n      new_img.addEventListener('error', () => {\n        console.error(`Could not replace image ${img.src} with ${new_src}.`);\n      });\n      if (new_img.complete) {\n        img.src = new_img.src;\n      }\n    }\n  }\n}\n"],"names":["SphinxColorschemeImageHandler","options","_this","activate","scheme","data_att","images","document","querySelectorAll","_loop","img","_step","value","new_img","Image","new_src","getAttribute","src","addEventListener","console","error","complete","_iterator","_createForOfIteratorHelperLoose","done","_schemes","_mediaqs","_auto","hasOwnProperty","meta_prop","querySelector","meta_schemes","undefined","content","length","schemes","split","_iterator2","_step2","item","push","trim","_loop2","_step3","q","globalThis","matchMedia","matches","e","log","_iterator3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAaA,6BAA6B,GACxC,SAAAA,6BAAAA,CAAYC,OAAO,EAAK;AAAA,EAAA,IAAAC,KAAA,GAAA,IAAA;AAAA,EAAA,IAAZD,OAAO,KAAA,KAAA,CAAA,EAAA;IAAPA,OAAO,GAAC,EAAE;AAAA;AAAA,EAAA,IAAA,CAyCtBE,QAAQ,GAAG,UAACC,MAAM,EAAK;IACrB,IAAMC,QAAQ,kCAAgCD,MAAQ;IACtD,IAAME,MAAM,GAAGC,QAAQ,CAACC,gBAAgB,CAAQH,MAAAA,GAAAA,QAAQ,MAAG,CAAC;IAAC,IAAAI,KAAA,GAAAA,SAAAA,KAAAA,GACnC;AAAA,MAAA,IAAfC,GAAG,GAAAC,KAAA,CAAAC,KAAA;AACZ,MAAA,IAAMC,OAAO,GAAG,IAAIC,KAAK,EAAE;AAC3B,MAAA,IAAMC,OAAO,GAAGL,GAAG,CAACM,YAAY,CAACX,QAAQ,CAAC;MAC1CQ,OAAO,CAACI,GAAG,GAAGF,OAAO;AACrBF,MAAAA,OAAO,CAACK,gBAAgB,CAAC,MAAM,EAAE,YAAM;AACrCR,QAAAA,GAAG,CAACO,GAAG,GAAGJ,OAAO,CAACI,GAAG;AACvB,OAAC,CAAC;AACFJ,MAAAA,OAAO,CAACK,gBAAgB,CAAC,OAAO,EAAE,YAAM;QACtCC,OAAO,CAACC,KAAK,CAA4BV,0BAAAA,GAAAA,GAAG,CAACO,GAAG,GAAA,QAAA,GAASF,OAAO,GAAA,GAAG,CAAC;AACtE,OAAC,CAAC;MACF,IAAIF,OAAO,CAACQ,QAAQ,EAAE;AACpBX,QAAAA,GAAG,CAACO,GAAG,GAAGJ,OAAO,CAACI,GAAG;AACvB;KACD;AAbD,IAAA,KAAA,IAAAK,SAAA,GAAAC,+BAAA,CAAkBjB,MAAM,CAAA,EAAAK,KAAA,EAAA,CAAA,CAAAA,KAAA,GAAAW,SAAA,EAAA,EAAAE,IAAA,GAAA;MAAAf,KAAA,EAAA;AAAA;GAczB;EAzDC,IAAI,CAACgB,QAAQ,GAAG,EAAE;EAClB,IAAI,CAACC,QAAQ,GAAG,EAAE;;AAElB;AACA;AACA;AACA;AACA,EAAA,IAAI,CAACC,KAAK,GAAG1B,OAAO,CAAC2B,cAAc,CAAC,MAAM,CAAC,GACvC3B,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,GACxB,IAAI;AAER,EAAA,IAAM4B,SAAS,GAAGtB,QAAQ,CAACuB,aAAa,CAAC,2BAA2B,CAAC;EACrE,IAAIC,YAAY,GAAIF,SAAS,IAAIG,SAAS,GAAI,EAAE,GAAGH,SAAS,CAACI,OAAO;AAEpE,EAAA,IAAIF,YAAY,CAACG,MAAM,GAAG,CAAC,EAAE;AAC3B,IAAA,IAAMC,OAAO,GAAGJ,YAAY,CAACK,KAAK,CAAC,GAAG,CAAC;AACvC,IAAA,KAAA,IAAAC,UAAA,GAAAd,+BAAA,CAAmBY,OAAO,CAAA,EAAAG,MAAA,EAAA,CAAA,CAAAA,MAAA,GAAAD,UAAA,EAAA,EAAAb,IAAA,GAAE;AAAA,MAAA,IAAjBe,IAAI,GAAAD,MAAA,CAAA1B,KAAA;MACb,IAAI,CAACa,QAAQ,CAACe,IAAI,CAACD,IAAI,CAACE,IAAI,EAAE,CAAC;AACjC;AACF,GAAC,MAAM;AACL,IAAA,IAAI,CAAChB,QAAQ,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;AACnC;EAAC,IAAAiB,MAAA,GAAAA,SAAAA,MAAAA,GAEmC;AAAA,IAAA,IAAzBtC,MAAM,GAAAuC,MAAA,CAAA/B,KAAA;IACf,IAAMgC,CAAC,GAAGC,UAAU,CAACC,UAAU,CAA2B1C,yBAAAA,GAAAA,MAAM,MAAG,CAAC;IACpE,IAAIwC,CAAC,CAACG,OAAO,EAAE;AACb7C,MAAAA,KAAI,CAACC,QAAQ,CAACC,MAAM,CAAC;AACvB;AACA,IAAA,IAAIF,KAAI,CAACyB,KAAK,KAAK,IAAI,EAAE;AACvBiB,MAAAA,CAAC,CAAC1B,gBAAgB,CAAC,QAAQ,EAAE,UAAA8B,CAAC,EAAI;QAChC,IAAIA,CAAC,CAACD,OAAO,EAAE;AACb5B,UAAAA,OAAO,CAAC8B,GAAG,CAAC,QAAQ,EAAED,CAAC,CAAC;AACxB9C,UAAAA,KAAI,CAACC,QAAQ,CAACC,MAAM,CAAC;AACvB;AACF,OAAC,CAAC;AACFF,MAAAA,KAAI,CAACwB,QAAQ,CAACc,IAAI,CAACI,CAAC,CAAC;AACvB;GACD;AAdD,EAAA,KAAA,IAAAM,UAAA,GAAA3B,+BAAA,CAAqB,IAAI,CAACE,QAAQ,CAAAkB,EAAAA,MAAA,EAAAA,CAAAA,CAAAA,MAAA,GAAAO,UAAA,IAAA1B,IAAA,GAAA;IAAAkB,MAAA,EAAA;AAAA;AAepC;;;;"}